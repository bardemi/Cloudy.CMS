name: .NET

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Pack
      run: dotnet pack --no-build
    - name: Publish
      env:
        NUGET_APIKEY: ${{ secrets.NUGET_APIKEY }}
      run: dotnet nuget push **/*.nupkg --source https://api.nuget.org/v3/index.json --api-key $NUGET_APIKEY --skip-duplicate
    - name: Upload to blob storage
      uses: azure/CLI@v1
      env:
        key: ${{ secrets.CLOUDYUIBLOBPUSHSECRET }}
      with:
        inlineScript: |
            CONTAINER_NAME=v-$(grep '<Version>' < Cloudy.CMS/Cloudy.CMS.csproj | sed 's/.*<Version>\(.*\)<\/Version>/\1/' | tr . -)
            if [ $(az storage container exists --name $CONTAINER_NAME --account-name cloudyui --account-key $key | jq .exists) == "true" ]; then
              echo "Container already exists"
              exit
            fi
            echo "Creating container"
            az storage container create -n $CONTAINER_NAME --account-name cloudyui --public-access blob --account-key $key
            echo "Uploading JavaScript"
            az storage blob upload-batch -d $CONTAINER_NAME --account-name cloudyui -s "Cloudy.CMS.UI/wwwroot" --pattern *.js --account-key $key
            echo "Uploading CSS"
            az storage blob upload-batch -d $CONTAINER_NAME --account-name cloudyui -s "Cloudy.CMS.UI/wwwroot" --pattern *.css --account-key $key
            echo "Uploading SVGs"
            az storage blob upload-batch -d $CONTAINER_NAME --account-name cloudyui -s "Cloudy.CMS.UI/wwwroot" --pattern *.svg --account-key $key

